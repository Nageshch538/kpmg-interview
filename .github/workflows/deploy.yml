name: Deploy Flask App to AWS

on:
  push:
    branches:
      - dev
      - staging
      - main

env:
  AWS_REGION: eu-west-2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::ACCOUNT_ID:role/GitHubActionsDeployRole
        aws-region: ${{ env.AWS_REGION }}

    - name: Set deployment environment
      id: set_env
      run: |
        if [[ "${{ github.ref_name }}" == "dev" ]]; then
          echo "env_name=dev" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref_name }}" == "staging" ]]; then
          echo "env_name=staging" >> $GITHUB_OUTPUT
        else
          echo "env_name=prod" >> $GITHUB_OUTPUT
        fi

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build and Push Docker image
      run: |
        IMAGE_TAG=${{ steps.set_env.outputs.env_name }}
        IMAGE_URI=ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/flaskapp:$IMAGE_TAG
        docker build -t $IMAGE_URI ./app
        docker push $IMAGE_URI

    - name: Deploy with Terraform
      working-directory: terraform/environments/${{ steps.set_env.outputs.env_name }}
      run: |
        terraform init -backend-config="key=${{ steps.set_env.outputs.env_name }}/terraform.tfstate"
        terraform apply -auto-approve
