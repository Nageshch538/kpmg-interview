name: Terraform-Infrastructure-Deployment

on:
  push:
    branches:
      - staging
      - main
    paths:
      - 'infra/**'
      - '.github/workflows/terraform-deploy.yml'

env:
  AWS_REGION: eu-west-2
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EC2_PUBLIC_KEY: ${{ secrets.EC2_PUBLIC_KEY }}

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set deployment environment
        id: set_env
        run: |
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "env_name=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "env_name=staging" >> $GITHUB_OUTPUT
          else
            echo "env_name=prod" >> $GITHUB_OUTPUT
          fi

      - name: Create tfvars file from GitHub secrets
        run: echo 'ec2_public_key = "${{ secrets.EC2_PUBLIC_KEY }}"' > environments/dev/dev.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform refresh
        run: terraform refresh

      - name: Terraform Plan
        run: terraform plan -var="ec2_public_key=$EC2_PUBLIC_KEY"

      - name: Terraform Apply
        if: github.ref_name == 'main' || github.ref_name == 'staging' || github.ref_name == 'dev'
        run: terraform apply -auto-approve -var-file="environments/${{ steps.set_env.outputs.env_name }}/${{ steps.set_env.outputs.env_name }}.tfvars"
